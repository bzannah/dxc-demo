import { SanityDocument, SanityClient } from '@sanity/client';
import { EnhancerContext, ComponentParameter, ComponentInstance, LimitPolicy, ComponentParameterEnhancer } from '@uniformdev/canvas';

type ModifySanityQueryOptions<TContext extends EnhancerContext = EnhancerContext> = {
    parameterName: string;
    parameter: ComponentParameter<string>;
    component: ComponentInstance;
    query: string;
    queryParameters: Record<string, unknown>;
    /** The enhancer context provided to the enhance() function */
    context: TContext;
};
/** The default shape of the result value of the Sanity enhancer. Note that this can change if the query is altered. */
type SanityEnhancerResult<TFields extends Record<string, any>> = SanityDocument<TFields>;
declare const CANVAS_SANITY_PARAMETER_TYPES: readonly string[];
declare function createSanityEnhancer({ client, previewClient, modifyQuery, limitPolicy, }: {
    client: SanityClient;
    previewClient?: SanityClient;
    modifyQuery?: (options: ModifySanityQueryOptions) => {
        query: string;
        queryParameters: Record<string, unknown>;
    } | undefined;
    limitPolicy?: LimitPolicy;
}): ComponentParameterEnhancer<SanityEnhancerResult<Record<string, unknown>>>;

export { CANVAS_SANITY_PARAMETER_TYPES, ModifySanityQueryOptions, SanityEnhancerResult, createSanityEnhancer };
